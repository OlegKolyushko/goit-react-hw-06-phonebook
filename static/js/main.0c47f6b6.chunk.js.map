{"version":3,"sources":["components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/App/App.module.css","components/ContactList/ContactList.module.css","redux/contact/contactActions.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Alert/Alert.js","components/App/App.js","redux/contact/contactReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/Alert/Alert.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","contacts","id","uuidv4","deleteContact","filterContact","contactFromLoacalStorage","ContactForm","state","handlerForm","e","preventDefault","props","find","contact","alert","onAddContact","setState","handlerName","target","value","handlerNumber","this","onSubmit","className","styles","inputName","type","onChange","placeholder","inputNumber","pattern","button","Component","mapDispatchToProps","contactActions","connect","items","ContactListItem","item","info","onClick","filter","toLowerCase","includes","TransitionGroup","component","map","CSSTransition","key","timeout","classNames","handlerFilter","container","label","input","Alert","text","App","inList","handlerAlert","setTimeout","savedContacts","localStorage","getItem","getFromLocalStorage","JSON","parse","in","appear","title","alertStyles","unmountOnExit","length","contactAction","createReducer","action","getContactFromLocalStorage","parsedContact","setItem","stringify","newContactLocalStorage","_","combineReducers","store","configureStore","reducer","contactReducer","ReactDom","render","document","querySelector"],"mappings":"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","file":"static/js/main.0c47f6b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2pYEY\",\"info\":\"ContactListItem_info__2eS98\",\"button\":\"ContactListItem_button__1RN6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__XGgFi\",\"label\":\"Filter_label__tzDQJ\",\"input\":\"Filter_input__2iFd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"App_appear__250ms\",\"appearActive\":\"App_appearActive__1ntH_\",\"title\":\"App_title__1umRo\",\"container\":\"App_container__6Npov\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__36taW\",\"enterActive\":\"ContactList_enterActive__DR_m-\",\"exit\":\"ContactList_exit__32FR-\",\"exitActive\":\"ContactList_exitActive__1n-Xg\"};","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"contact/addContact\", (name, number) => ({\r\n  payload: {\r\n    contacts: {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    },\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction('contact/deleteContact');\r\nconst filterContact = createAction('contact/filterContact');\r\nconst contactFromLoacalStorage = createAction('contact/contactFromLoacalStorage')\r\n\r\nexport default { addContact, deleteContact, filterContact, contactFromLoacalStorage };\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\nimport {connect} from 'react-redux';\r\nimport contactActions from '../../redux/contact/contactActions';\r\n\r\n class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  }\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handlerForm = (e) => {\r\n    e.preventDefault();\r\n    const {name, number} = this.state;\r\n    const {contacts} = this.props;\r\n    const contactInList = contacts.find(contact => contact.name === name);\r\n    if(contactInList) {\r\n      this.props.alert();\r\n      return;\r\n    }\r\n    this.props.onAddContact(name, number);\r\n    this.setState({name: ''});\r\n    this.setState({number: ''});\r\n  };\r\n  handlerName = (e) => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n  handlerNumber = (e) => {\r\n      this.setState({ number: e.target.value });\r\n  }\r\n\r\n  render() {\r\n      const {name, number} = this.state\r\n    return (\r\n      <form onSubmit={this.handlerForm}>\r\n        <label className={styles.name}>Name\r\n        <input className={styles.inputName} type=\"text\" value={name} onChange={this.handlerName} placeholder='Enter your name'></input>\r\n        </label>\r\n        <label className={styles.number}>Number\r\n        <input className={styles.inputNumber} type=\"tel\"  value={number} onChange={this.handlerNumber} pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\" placeholder='123-12-12' ></input>\r\n        </label>       \r\n        <button className={styles.button} type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: contactActions.addContact\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nfunction ContactListItem({ name, number, deleteContact }) {\r\n  return (\r\n    <li className={styles.item}>\r\n      <span className={styles.info}>\r\n      {name} : {number}\r\n      </span>\r\n       <button className={styles.button} onClick={deleteContact}>Delete</button>\r\n    </li>\r\n  );\r\n}\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  deleteContact: PropTypes.func.isRequired,\r\n}\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport contactActions from \"../../redux/contact/contactActions\";\r\n\r\nfunction ContactList({ contacts, deleteContact }) {\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <CSSTransition key={id} timeout={250} classNames={styles}>\r\n          <ContactListItem\r\n            name={name}\r\n            number={number}\r\n            deleteContact={() => deleteContact(id)}\r\n          ></ContactListItem>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n}\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(Object),\r\n  deleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n const {items, filter} = state.contacts;\r\n const filteredContacts = items.filter((contact) =>\r\n contact.name.toLowerCase().includes(filter.toLowerCase()));\r\n return {\r\n   contacts: filteredContacts\r\n }\r\n};\r\nconst mapDispatchToProps = {\r\n  deleteContact: contactActions.deleteContact,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\nimport {connect} from 'react-redux';\r\nimport contactActions from '../../redux/contact/contactActions';\r\n\r\nfunction Filter({value, handlerFilter}) {\r\n    return (\r\n        <div className={styles.container}>\r\n            <label className={styles.label}>\r\n            Search contacts by name\r\n            <input className={styles.input} type=\"text\" value={value} onChange={e => handlerFilter(e.target.value)} ></input>\r\n            </label>\r\n        </div>\r\n    )\r\n\r\n};\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    handlerFilter: PropTypes.func.isRequired,\r\n}\r\nconst mapStateToProps = state => ({\r\n    value: state.contacts.filter,\r\n});\r\nconst mapDispatchToProps = {\r\n    handlerFilter: contactActions.filterContact,\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from \"react\";\r\nimport styles from './Alert.module.css';\r\n\r\nfunction Alert() {\r\n  return (\r\n    <>\r\n      <div className={styles.container}>\r\n        <h1 className={styles.text}>Contact already exist!</h1>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport styles from './App.module.css';\r\nimport Alert from '../Alert/Alert';\r\nimport alertStyles from '../Alert/Alert.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactAction from '../../redux/contact/contactActions';\r\n\r\n\r\n class App extends Component {\r\n  state = {\r\n    inList: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const savedContacts = localStorage.getItem('contactList');\r\n    if(savedContacts) {\r\n      this.props.getFromLocalStorage(JSON.parse(savedContacts));\r\n    }\r\n  }\r\n  handlerAlert = () => {\r\n    this.setState({inList: true});\r\n      setTimeout(() => {\r\n        this.setState({inList: false});\r\n      }, 2500);\r\n  }\r\n\r\n  render() {\r\n      const { inList } = this.state;\r\n      const {contacts} = this.props;\r\n    return (\r\n      <>\r\n      <CSSTransition in={true} appear={true} timeout={500} classNames={styles}>\r\n         <h1 className={styles.title}>Phonebook</h1>\r\n      </CSSTransition>\r\n      <CSSTransition in={inList} timeout={250} classNames={alertStyles} unmountOnExit>\r\n        <Alert  />\r\n      </CSSTransition>\r\n      <section className={styles.container}>\r\n       <ContactForm alert={this.handlerAlert} ></ContactForm>\r\n       </section>\r\n       {contacts.length > 0 && (\r\n           <>\r\n           <br></br>\r\n           <Filter/>\r\n           <ContactList/>\r\n           </>\r\n       )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n});\r\nconst mapDispatchToProps = ({\r\n  getFromLocalStorage: contactAction.contactFromLoacalStorage,\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { combineReducers } from \"redux\";\r\nimport contactActions from \"../contact/contactActions\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = (state, action) => {\r\n  const getContactFromLocalStorage = localStorage.getItem(\"contactList\");\r\n  const contact = action.payload.contacts;\r\n  if (!getContactFromLocalStorage) {\r\n    localStorage.setItem(\"contactList\", JSON.stringify([contact]));\r\n  } else {\r\n    const parsedContact = JSON.parse(getContactFromLocalStorage);\r\n    localStorage.setItem(\r\n      \"contactList\",\r\n      JSON.stringify([...parsedContact, contact])\r\n    );\r\n  }\r\n  return [...state, action.payload.contacts];\r\n};\r\n\r\nconst deleteContact = (state, action) => {\r\n  const getContactFromLocalStorage = localStorage.getItem(\"contactList\");\r\n  const parsedContact = JSON.parse(getContactFromLocalStorage);\r\n  const newContactLocalStorage = parsedContact.filter(\r\n    (contact) => contact.id !== action.payload\r\n  );\r\n  localStorage.setItem(\"contactList\", JSON.stringify(newContactLocalStorage));\r\n  return state.filter((contact) => contact.id !== action.payload);\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [contactActions.addContact]: addContact,\r\n  [contactActions.deleteContact]: deleteContact,\r\n  [contactActions.contactFromLoacalStorage]: (_, action) => action.payload,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [contactActions.filterContact]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactReducer from \"./contact/contactReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport App from './components/App/App'\r\nimport store from './redux/store';\r\n\r\n\r\n\r\nReactDom.render(<Provider store={store}><App/></Provider>, document.querySelector('#root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactForm_name__1UIO3\",\"number\":\"ContactForm_number__Ykbrb\",\"inputName\":\"ContactForm_inputName__VuBkn\",\"inputNumber\":\"ContactForm_inputNumber__1ZxBl\",\"button\":\"ContactForm_button__3diWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Alert_enter__13dKs\",\"enterActive\":\"Alert_enterActive__jCHY4\",\"exit\":\"Alert_exit__1a7Ji\",\"exitActive\":\"Alert_exitActive__2C6v8\",\"container\":\"Alert_container__2OOs6\",\"text\":\"Alert_text__Lf1mP\"};"],"sourceRoot":""}